# include conf.d/django.conf.d/upstream.conf;
# include conf.d/django.conf.d/maps/*.conf;

server_names_hash_bucket_size 128;

upstream gunicorn {
    # Proxy to Gunicorn socket and always retry, as recommended by deployment
    # guide: http://docs.gunicorn.org/en/stable/deploy.html
    server unix:/run/gunicorn/gunicorn.sock max_fails=0;
}

server {
    server_name {{DOMAIN}};
    server_tokens off;
    listen 8000;

    root /app;

    location ~ ^/media/?(.*)$ {
        # Fallback for projects still using MEDIA_ROOT = BASE_DIR/mediafiles
        try_files /media/$1 /mediafiles/$1 =404;
    }

    location ~ ^/static/?(.*)$ {
        # Fallback for projects still using STATIC_ROOT = BASE_DIR/staticfiles
        # as recommended by WhiteNoise
        try_files /static/$1 /staticfiles/$1 =404;
    }

    location / {
        client_max_body_size 20m;

        proxy_pass_header Server;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Host $http_host;
        proxy_set_header X-Scheme $scheme;
        proxy_redirect off;

        # We only use the 'X-Forwarded-Proto' header from our load-balancer to
        # indicate the original connection used HTTPS, but Gunicorn by default
        # accepts more headers than that:
        # http://docs.gunicorn.org/en/19.7.1/settings.html#secure-scheme-headers
        # Overriding that config in Gunicorn is a bit complicated, and could
        # easily be overriden by accident by the user, so just delete those
        # other headers here so that a client can't set them
        # incorrectly/maliciously.
        proxy_set_header X-Forwarded-Protocol "";
        proxy_set_header X-Forwarded-Ssl "";
        proxy_pass http://gunicorn;
    }
}
